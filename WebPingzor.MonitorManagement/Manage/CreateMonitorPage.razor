@page "/monitors/create"
@rendermode InteractiveServer
@attribute [Authorize]

@inject WebPingzor.MonitorManagement.MonitorService _monitorService
@inject NavigationManager _navigation
@inject ILogger<CreateMonitorPage> _logger
@inject IToasterService _toaster

<PageTitle>Pingzor | Create monitor</PageTitle>

<Title Level="2">Create monitor</Title>

<MonitorForm Model="@model" OnSubmit="OnFormSubmit" />
<ToasterContainer />

@code {

  private MonitorForm.FormModel model = new MonitorForm.FormModel();

  private async Task OnFormSubmit(EditContext editContext)
  {
    HttpMonitor? httpMonitor = null;

    try
    {
      httpMonitor = await _monitorService.Create(model.Name, model.Url, model.Interval);
    }
    catch (ValidationException ex)
    {
      _toaster.Error("Error creating", ex.Message);
      return;
    }
    catch (Exception ex)
    {
      _logger.LogError(ex, "Failed to create monitor");
      _toaster.Error("Error creating", "An error occurred while creating the monitor. Please try again.");
      return;
    }

    if (httpMonitor != null)
    {
      _toaster.Success("Monitor created", "The monitor was created successfully.");
      _navigation.NavigateTo($"/monitors/{httpMonitor.Id}");
    }
  }
}